import { bot } from './functions/clients'
import { getFileExtension } from "./functions/getFileExtension"
import { downloadFile } from "./functions/downloadFile"
import { TempFileManager } from "./functions/tempFileManager"
import { transcribeAudio } from "./functions/transcribe"
import { formatText } from "./functions/formatText"
import { getUSDtoRUBRate } from './functions/getCurrencyRate'

bot.command("start", async (ctx) => {
  const welcomeMessage = `
üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è —Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∞—Ü–∏–∏ –∞—É–¥–∏–æ –≤ —Ç–µ–∫—Å—Ç.

üéØ –ß—Ç–æ —è —É–º–µ—é:

‚Ä¢ –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤—ã–≤–∞—Ç—å –≥–æ–ª–æ—Å–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –∞—É–¥–∏–æ—Ñ–∞–π–ª—ã –≤ —Ç–µ–∫—Å—Ç
‚Ä¢ –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—É—á–∏–≤—à–∏–π—Å—è —Ç–µ–∫—Å—Ç –¥–ª—è —É–¥–æ–±–Ω–æ–≥–æ —á—Ç–µ–Ω–∏—è
‚Ä¢ –†–∞–±–æ—Ç–∞—Ç—å —Å —Ñ–∞–π–ª–∞–º–∏ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤ (mp3, ogg, wav, m4a)
‚Ä¢ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å —Ñ–∞–π–ª—ã –ª—é–±–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞

üìù –ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:

1. –ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ –∞—É–¥–∏–æ—Ñ–∞–π–ª
2. –î–æ–∂–¥–∏—Ç–µ—Å—å –æ–±—Ä–∞–±–æ—Ç–∫–∏
3. –ü–æ–ª—É—á–∏—Ç–µ –≥–æ—Ç–æ–≤—ã–π —Ç–µ–∫—Å—Ç

üí∞ –ü–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —è –ø–æ–∫–∞–∂—É —Å—Ç–æ–∏–º–æ—Å—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è API

‚ö°Ô∏è –ù–∞—á–Ω–∏—Ç–µ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å - –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ!
`

  await ctx.reply(welcomeMessage)
})

bot.on(['message:voice', 'message:audio'], async (ctx) => {
  try {
    await ctx.reply('–ù–∞—á–∏–Ω–∞—é –æ–±—Ä–∞–±–æ—Ç–∫—É –∞—É–¥–∏–æ...');

    const file = ctx.message.voice || ctx.message.audio;
    const fileId = file.file_id;
    const mimeType = file.mime_type || 'audio/ogg';
    const extension = getFileExtension(mimeType);

    const fileInfo = await bot.api.getFile(fileId);
    const fileUrl = `https://api.telegram.org/file/bot${bot.token}/${fileInfo.file_path}`;

    const outputPath = TempFileManager.createTempFilePath(fileId, extension);
    await downloadFile(fileUrl, outputPath);

    if (fileInfo.file_size && fileInfo.file_size > 5 * 1024 * 1024) {
      await ctx.reply('–§–∞–π–ª –±–æ–ª—å—à–æ–π, —Ä–∞–∑–±–∏–≤–∞—é –Ω–∞ —á–∞—Å—Ç–∏...');
    }

    const transcriptionResult = await transcribeAudio(outputPath);
    const formattingResult = await formatText(transcriptionResult.text);

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç
    await ctx.reply(formattingResult.text);

    // –°—á–∏—Ç–∞–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±—â—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å
    const totalCost = transcriptionResult.cost + formattingResult.cost;
    const usdRate = await getUSDtoRUBRate();
    const costInRub = totalCost * usdRate;

    await ctx.reply(
      `–°—Ç–æ–∏–º–æ—Å—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫–∏: ${totalCost.toFixed(2)} $ (‚âà${costInRub.toFixed(2)} ‚ÇΩ)`
    );

    await ctx.reply('–ü–µ—Ä–µ–≤–µ–¥–∏ –ø–æ –Ω–æ–º–µ—Ä—É +79521789523 –Ω–∞ –¢–∏–Ω—å–∫–æ—Ñ—Ñ (–ï–≤–≥–µ–Ω–∏–π –ö.) üç∫')

    TempFileManager.cleanup(outputPath);
  } catch (error) {
    console.error('Error:', error);
    await ctx.reply(`–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∞—É–¥–∏–æ: ${error.message}`);
  }
});

bot.start()